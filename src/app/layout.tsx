import '#@/styles/css/globals.css';
import 'material-symbols';
import layout from '#@/styles/css/layout.module.css';
import Footer from '#@/components/footer';
import Header from '#@/components/header';
import FAB from '#@/components/fab';
import { NavProvider } from '#@/app/navigator-context';
import { SearchProvider } from '#@/app/search-context';
import {
    Poiret_One,
    Roboto_Mono,
    Josefin_Sans,
    Roboto,
} from 'next/font/google';
import type { Metadata } from 'next';
import {
    JSXElementConstructor,
    PromiseLikeOfReactNode,
    ReactElement,
    ReactFragment,
    ReactNode,
    ReactPortal,
    Suspense,
} from 'react';
import { NoteProvider } from './notes-context';
import Nota from '#@/components/nota';

export const metadata: Metadata = {
    metadataBase: new URL(
        'https://camilo.suarez-ramirez.com'
    ),
    title: 'The Art of Starting Over',
    description: 'Generated by create next app',
    generator: 'The Art of Starting Over',
    applicationName: 'The Art of Starting Over',
    referrer: 'origin-when-cross-origin',
    keywords: [ 'Next.js', 'React', 'JavaScript' ],
    authors: [
        {
            name: 'cam',
        },
        {
            name: 'Cachorro Cami',
            url: 'https://camilo.suarez-ramirez.com',
        },
    ],
    colorScheme: 'light dark',
    themeColor: [
        {
            media: '(prefers-color-scheme: light)',
            color: '#a700b0',
        },
        {
            media: '(prefers-color-scheme: dark)',
            color: '#ff4e3f',
        },
    ],
    creator: 'Cachorro Cami',
    manifest:
        'https://camilo.suarez-ramirez.com/manifest.json',
    publisher: 'CachorroC',
    alternates: {},
    formatDetection: {
        email: false,
        address: false,
        telephone: false,
    },
    openGraph: {
        title: 'The Art of Starting Over',
        description: 'The React Framework for the Web',
        url: 'https://camilo.suarez-ramirez.com',
        siteName: 'Next.js',
        images: [
            {
                url: 'https://camilo.suarez-ramirez.com/splash_screens/12.9__iPad_Pro_portrait.png',
                width: 800,
                height: 600,
            },
            {
                url: 'https://camilo.suarez-ramirez.com/splash_screens/8.3__iPad_Mini_landscape.png',
                width: 1800,
                height: 1600,
                alt: 'My custom alt',
            },
        ],
        locale: 'es-CO',
        type: 'website',
    },
    icons: {
        icon: [
            {
                url: '/icons/favicon.png',
            },
            new URL(
                '/favicon.svg',
                'https://camilo.suarez-ramirez.com'
            ),
        ],
        shortcut: '/safari-pinned-tab.svg',
        apple: '/icons/apple-touch-icon.png',
        other: {
            rel: 'apple-touch-icon-precomposed',
            url: '/icons/apple-touch-icon-precomposed.png',
        },
    },
    appleWebApp: {
        title: 'Apple Web App',
        statusBarStyle: 'black-translucent',
        startupImage: [
            '/icons/mstile-310x310.png',
            {
                url: '/icons/android-chrome-512x512.png',
                media: '(device-width: 768px) and (device-height: 1024px)',
            },
        ],
    },
    appLinks: {
        web: {
            url: 'https://camilo.suarez-ramirez.com',
            should_fallback: true,
        },
    },
};

const roboto_mono = Roboto(
    {
        subsets: [ 'latin' ],
        variable: '--roboto',
        display: 'swap',
        weight: [ '100', '400', '700' ],
    }
);

const josefina = Josefin_Sans(
    {
        subsets: [ 'latin' ],
        variable: '--josefa',
        display: 'fallback',
    }
);

const poiret = Poiret_One(
    {
        weight: '400',
        variable: '--poiret',
        subsets: [ 'latin', 'latin-ext' ],
        display: 'swap',
    }
);

export default function RootLayout (
    props: {
        children: ReactNode;
        modal: ReactNode;
        header: ReactNode
    }
) {
    return (
        <html
            lang='es'
            className={ `${ poiret.variable } ${ roboto_mono.variable } ${ josefina.variable } [color-scheme: light dark]` }
        >
            <body>
                <SearchProvider>
                    <NavProvider>
                        <NoteProvider>
                            { props.modal }
                            <div
                                className={ layout.container }
                            >

                                { props.header }
                                { props.children }
                                <Footer />
                            </div>
                        </NoteProvider>
                    </NavProvider>
                </SearchProvider>
            </body>
        </html>
    );
}
